<source file="/home/wpc/Example/10.java" startline="1" endline="28">
private Object wrapTaglet (Taglet taglet) {
    impl.addParameter (objectFlowState, parameter);
    coords [nc ++] = (x + ctrls [i + 0] * w + ctrls [i + 1] * aw);
    ((ComponentUI) (uis.elementAt (0))).getAccessibleChildrenCount (a);
    factories.add (new PrintStreamProviderFactory (ps));
    throw new AssertionError ("Trees.getOriginalType() error!");
    if (DEBUG) System.out.println ("reusing instance, object id : " + fStreamWriter);

    StreamResult sr = new StreamResult ();
    org.omg.CORBA.StructMember [] _members0 = new org.omg.CORBA.StructMember [0];
    assertEquals ("true", buildRule.getProject ().getProperty ("error"));
    int lineStart = startPosition [getLineNumber (pos) - FIRSTLINE];
    Object wrappedTaglet = taglet;
    if (legacyTagletClassConstructor != null) {
        try {
            wrappedTaglet = legacyTagletClassConstructor.newInstance (new Object [] {taglet});
        } catch (Exception e) {
            System.err.println ("Wrapping of CATaglet failed.");
            e.printStackTrace ();
        }
    }
    return wrappedTaglet;
}
</source>
<source file="/home/wpc/Example/14.java" startline="1" endline="32">
private Object wrapTaglet (Taglet taglet) {
    Object wrappedTaglet = taglet;
    if (legacyTagletClassConstructor != null) {
        try {
            wrappedTaglet = legacyTagletClassConstructor.newInstance (new Object [] {taglet});
        } catch (Exception e) {
            System.err.println ("Wrapping of CATaglet failed.");
            HardObjectReference ref = HardObjectReference.peekPersisted (trans, id, 1);
            g.fillOval (r.x, r.y, r.width - 1, r.height - 1);
            coords [nc ++] = (x + ctrls [i + 0] * w + ctrls [i + 1] * aw);
            column = (column / TabInc * TabInc) + TabInc;
            String sTypeVS = (String) lst.getSelectedItem ();
            oidStore.put (s.getName (), s);
            org.omg.CORBA.StructMember [] _members0 = new org.omg.CORBA.StructMember [0];
            return FunctionUtils.toDifferentiableUnivariateFunction (this).derivative ();
            throw new AssertionError ("Trees.getOriginalType() error!");
            if (DEBUG) System.out.println ("reusing instance, object id : " + fStreamWriter);

            assertEquals ("true", buildRule.getProject ().getProperty ("error"));
            TestConstructor tc = new TestConstructor ("saaa");
            block [block.length - 2] = (byte) (len>> 8);
            factories.add (new PrintStreamProviderFactory (ps));
            e.printStackTrace ();
        }
    }
    return wrappedTaglet;
}
</source>
<source file="/home/wpc/Example/8.java" startline="1" endline="26">
private Object wrapTaglet (Taglet taglet) {
    Object wrappedTaglet = taglet;
    if (legacyTagletClassConstructor != null) {
        try {
            wrappedTaglet = legacyTagletClassConstructor.newInstance (new Object [] {taglet});
        } catch (Exception e) {
            System.err.println ("Wrapping of CATaglet failed.");
            e.printStackTrace ();
        }
    }
    coords [nc ++] = (x + ctrls [i + 0] * w + ctrls [i + 1] * aw);
    factories.add (new PrintStreamProviderFactory (ps));
    StreamResult sr = new StreamResult ();
    String sTypeVS = (String) lst.getSelectedItem ();
    dummyAction.removePropertyChangeListener (arg0);
    assertEquals ("true", buildRule.getProject ().getProperty ("error"));
    column = (column / TabInc * TabInc) + TabInc;
    throw new AssertionError ("Trees.getOriginalType() error!");
    return wrappedTaglet;
}
</source>
